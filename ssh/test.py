# e*d mod lambda(n)
e = 65537
d = int("543bacea569a4da1c8d367b206705804d876fad128587da71062388493269b22320ff0dd7f244ddd9f941bb277016fcc0f3815bc211f2e0131dd76c6e8d0d8ae8302c34da8f397f6293826ff515c1f0aefc08d83a61268ba66ad171ca7042da3ebd69f8b3e6fa09c5b0a4a05c5c5cc0afb22504f7545b6de26a104b5323e30a651aeffadcd71b12ec6987cedaf925791d0714ce59c0f5489e86142337d49239cb8c0ea0d8bf715f80660256ad300390933ff321294c2120f07422ff510a204f7a5c73c2193a572f88fde91c16323837b6283a30975b8bab95a37a6c1feefa4a8ec992bdeb5e774ee3351d5b1bb354969d4756a3b2dcc9e3c776f236990f508c45ea6a25cf01e4d1ec37e9b7694cb866c7132d870c8ed662ee0bfba9837bf9e1f4144c2b0cf38f32d985881110196a01c96dca802a49c8d4333beda9cfcb0f35151e4153c4e17d3bff3510940b1eed7c2be69be1cfd7da7ad2a2ba651389e12188ba7b8cdd2b048c691147a3e22676c97d608509e9e9ab0299cb8cc6f29ce9fed", 16)
# print(d)

# lambda = LCM (p-1), (q-1)

p = int("00ede27f06fb59c72ac4c10e7774e423ea307ad87c616d8354b139196c2d19334b62625458c265f153a2121a1d438f4afcb3e6678a1f184b18b8432fda5aee1f42835a19065dce83d8879a33885afc177756a1e96df1e3eb679e82d8c58d08f01f011c38880c28f01495a59adfc08c3a18a0cc5310bdb32ecb30a670323150645a257e54be174d22793c99035766b3ea70925272335ab36af586fbebe156b7e6eac57e60d0b53de14393d2f9ab3b2affe2837c528370be482fe5df3d937166bb63", 16)
q = int("0x00d9fc64a833d27536c99971a61a3147937c6414fea1dfbcc3466fb130f99df4645afd3d0b609bdefaa459aa7f8fbb54d1b474268ae14d5a35e540568b46949c4130c4dc9688a21d804467e73d06b7f63ad630f3d373bdfe6f0b0da2a2b3c1415bf27b1e9969603f1ef57146b38b2b4f928c86867fd1752b7f6dc1a3b8da464ba49710c11d0c2b5b37080a41c66ff40633f1b6bc62809dda2c180ffc2fc5a38d01572c1fe5827eaa69f45e436c122224fb5a21091d88c29825f0b76c4e1facecbf", 16)

# print((e *d)%((p-1) * (q-1)))

# print(e < (p-1)*(q-1))

import math

# print(math.gcd(e, (p-1)*(q-1)))

n = int("00ca8f862abc584cfd5890369bb50ffb8a35e5e5f19ec16e1d888bc87dfb63b6d9ebb61ea7ac60a63eaafefcf3d791d27e4b94c5f0e742b1dbfbf78d4a620bf19a6a8d77ee27a2262c377b10d66653bcb246cd98e166cfddb3e37a074972dc955b625393c46d2dd25dccc15d6ff5700d88ad30a4bd898f39320d933c7c8c250993a3e19d9534f708fe72afef600d86df659255193ae0b81e1219b622a19e7ba529f6ca7e37021e95a125e77b2ab27c503bca2911a122439a5f819ceddf7c41eb69d2014e6203d0151904acbefeb0e63205511b35eee5d3accba7861517604672cfb2df506325f7b46c394a0badf077bf334866440791b645280aea6b65bcd9edec6f6acd67a4ccfac8599bd66aa4ab99f7defb9747b416a0d3648e6b31914cb46eee7b34e0cb314d8c1e82e41b64f68e413323f74505d88907f1ae1c0389710eaf068e14dac41269270088f9409fcda2126488e681c04066a5401ae4c7256318ae15a9385e53e62c22b465fc676cc3ea3761c100ba485fb248303e5b6d33e912dd", 16)

# print(n == (p * q))
