Kyra Helmbold


--- Private Key -----
-----BEGIN RSA PRIVATE KEY-----
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
-----END RSA PRIVATE KEY-----

++ Items I expect to be contained in the file.
RSAPrivateKey ::= SEQUENCE {
             version           Version,
             modulus           INTEGER,  -- n
             publicExponent    INTEGER,  -- e
             privateExponent   INTEGER,  -- d
             prime1            INTEGER,  -- p
             prime2            INTEGER,  -- q
             exponent1         INTEGER,  -- d mod (p-1)
             exponent2         INTEGER,  -- d mod (q-1)
             coefficient       INTEGER,  -- (inverse of q) mod p
             otherPrimeInfos   OtherPrimeInfos OPTIONAL
         }
The above lines were sourced from https://datatracker.ietf.org/doc/html/rfc8017#appendix-A.1.2 
We will be using RSA. In RSA, there is a big prime (n), and its factors are (p) and (q). 
(e) is found such that (e) < (p-1)(q-1). (d) is found such that (e)(d) = 1 mod ((p-1)(q-1)). 

- Version will be 0 or 1, if n is using 2 primes or >2 primes, respectively. 
- modulus is n
- public exponent is e
- private exponent is d
- prime1 is p
- prime2 is q
- exponent1 is d % (p-1)
- exponent2 is d % (q-1)
- coefficient is (1/q) mod p

++ Steps to decode private key file:
- Convert from base 64 to hex using an ASN.1 decoder. The header and footer can be included or not. 
- I used https://lapo.it/asn1js/ 

++ things about the information below:
- 02 means that a number is an int. 
- 82/81 means that it's a long (first one), the rest of the bits are the number of octets of length that come after
1000 0001 or 1000 0010 (1st bit = it's indefinite, definite long, or reserved, all the bits after confirm the number of octets. If there were a zero, it would be indefinite).
- There is a length of the metadata (start info, first number after length) and a length of the # of bytes(octets) that make up the int. 

++ Meaning of some ints:
30 82 06 E4 : Offset = 0, Length = 4 + 1764  (total)
02 01 00 : 0 --  Version is zero, length = 2 + 1
02 82 01 81: Int, definite long, 2 following octets  Length = 4 + 385 (n) (384 bits that follow are n)
02 03 01 00 01: Int (e) 65537 (Length = 2 + 3 - last 3 bytes are the value of 3)
02 82 01 80: Int, definite long, 2 following octets, Length = 4 + 384 (384 bits that follow are (d))
02 81 C1: Int definite long, 1 following octet, Length = 3 + 193 (193 bits that follow are (p))
02 81 C1: Int, definite long, 1 following octet, Length = 3 + 193 (193 bits that follow are (q))
02 81 C1: Int, definite long, 1 following octet,   Length = 3 + 193 (193 bits that follow are (exponent 1))
02 81 C1: Int, definite long, 1 following octet, (Length = 3 + 193 (193 bits that follow are (exponent 2))
02 81 C0: Int, definite long, 1 following octet, Length = 3 + 192 (192 bits that follow are (coefficient))

++ Here are the ints themselves, all in hex:
n: 0x00ca8f862abc584cfd5890369bb50ffb8a35e5e5f19ec16e1d888bc87dfb63b6d9ebb61ea7ac60a63eaafefcf3d791d27e4b94c5f0e742b1dbfbf78d4a620bf19a6a8d77ee27a2262c377b10d66653bcb246cd98e166cfddb3e37a074972dc955b625393c46d2dd25dccc15d6ff5700d88ad30a4bd898f39320d933c7c8c250993a3e19d9534f708fe72afef600d86df659255193ae0b81e1219b622a19e7ba529f6ca7e37021e95a125e77b2ab27c503bca2911a122439a5f819ceddf7c41eb69d2014e6203d0151904acbefeb0e63205511b35eee5d3accba7861517604672cfb2df506325f7b46c394a0badf077bf334866440791b645280aea6b65bcd9edec6f6acd67a4ccfac8599bd66aa4ab99f7defb9747b416a0d3648e6b31914cb46eee7b34e0cb314d8c1e82e41b64f68e413323f74505d88907f1ae1c0389710eaf068e14dac41269270088f9409fcda2126488e681c04066a5401ae4c7256318ae15a9385e53e62c22b465fc676cc3ea3761c100ba485fb248303e5b6d33e912dd
e: 01 00 01
d: 0x543bacea569a4da1c8d367b206705804d876fad128587da71062388493269b22320ff0dd7f244ddd9f941bb277016fcc0f3815bc211f2e0131dd76c6e8d0d8ae8302c34da8f397f6293826ff515c1f0aefc08d83a61268ba66ad171ca7042da3ebd69f8b3e6fa09c5b0a4a05c5c5cc0afb22504f7545b6de26a104b5323e30a651aeffadcd71b12ec6987cedaf925791d0714ce59c0f5489e86142337d49239cb8c0ea0d8bf715f80660256ad300390933ff321294c2120f07422ff510a204f7a5c73c2193a572f88fde91c16323837b6283a30975b8bab95a37a6c1feefa4a8ec992bdeb5e774ee3351d5b1bb354969d4756a3b2dcc9e3c776f236990f508c45ea6a25cf01e4d1ec37e9b7694cb866c7132d870c8ed662ee0bfba9837bf9e1f4144c2b0cf38f32d985881110196a01c96dca802a49c8d4333beda9cfcb0f35151e4153c4e17d3bff3510940b1eed7c2be69be1cfd7da7ad2a2ba651389e12188ba7b8cdd2b048c691147a3e22676c97d608509e9e9ab0299cb8cc6f29ce9fed
p: 0x00ede27f06fb59c72ac4c10e7774e423ea307ad87c616d8354b139196c2d19334b62625458c265f153a2121a1d438f4afcb3e6678a1f184b18b8432fda5aee1f42835a19065dce83d8879a33885afc177756a1e96df1e3eb679e82d8c58d08f01f011c38880c28f01495a59adfc08c3a18a0cc5310bdb32ecb30a670323150645a257e54be174d22793c99035766b3ea70925272335ab36af586fbebe156b7e6eac57e60d0b53de14393d2f9ab3b2affe2837c528370be482fe5df3d937166bb63
q: 0x00d9fc64a833d27536c99971a61a3147937c6414fea1dfbcc3466fb130f99df4645afd3d0b609bdefaa459aa7f8fbb54d1b474268ae14d5a35e540568b46949c4130c4dc9688a21d804467e73d06b7f63ad630f3d373bdfe6f0b0da2a2b3c1415bf27b1e9969603f1ef57146b38b2b4f928c86867fd1752b7f6dc1a3b8da464ba49710c11d0c2b5b37080a41c66ff40633f1b6bc62809dda2c180ffc2fc5a38d01572c1fe5827eaa69f45e436c122224fb5a21091d88c29825f0b76c4e1facecbf
exponent 1 : 0x00cfdfadeb36f7b4005ea0e9785fd000c66408e5668368c46bdcd62dae0716cf691f971767dcb0629b17b443d7b0b2e5ef3f71a6a6df1746805a7c73b396e420b2e9bf70c0cc766b666ad0c8196e907e1d0dba3d16935afcd9b67d56da02ad7dcf4a14141e66a9db69d17f3e802a6d1f53682844aa0b6b2a07eb027666960b4f362b2f62f41dbe8cd26eaeb369cbd88a944678ff4c7b04f001902c526abe71c3bb024bb6648b0c80eda19eaa08049345b9f5f64cd08953ee16d5042875d091da4b
exponent 2: 0x00badc1ba10043518d34859fa1866465f9ecb0923ab0a26d5a6b9fc521b968889e1a4d68adbf13feb1967ef2a3c49f0e17717bfbaa23763e7562dea31162e0738d8273ceb00fd2003dfae5a2987290f1b6fff318a0536033a216b48a8cb4505e69a6539a2861e74a548c8b9cd2bde2d3a44967ec15d7847c5410cee43cca8765c26268cf51ca23c45e493b19a53444d7a8617486ca5d7c731047543496f2f1bf26be062a1580a67a08b79cb2690aa6505352b06cf2ef4ff842d5b5365745d9e35b
coefficient : 0x72ec92a0a31e28ae5f1a480d180470bcbddc5c900f8eb2ccd4fcbecd828bfa00010e3b7fd7d46e33382e76fdcdd06394bcf7372fb1bc5d7f4764e93091872e59cc39c42005c259618c73931aeec07320e265242dbfe8614ed2796eba87a463e76872902c810868944b1bcb2483a3c447faf1201d132aeb24811b9d53a35a542c990725a5eb271dfe37a077e1a6c689a8326b88b7849ed07a05526a923ff96833a5061917301abff821c27f1743c461062cb8836e1974e21d3cfdf436efd8f419




----- Public Key -----
++ Items I expect to be contained in the file.
The following is from: https://datatracker.ietf.org/doc/html/rfc8017#appendix-A.1.1
RSAPublicKey ::= SEQUENCE {
             modulus           INTEGER,  -- n
             publicExponent    INTEGER   -- e
         }
I would expect to see an integer (n), and a public exponent(e)
ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDKj4YqvFhM/ViQNpu1D/uKNeXl8Z7Bbh2Ii8h9+2O22eu2HqesYKY+qv7889eR0n5LlMXw50Kx2/v3jUpiC/Gaao137ieiJiw3exDWZlO8skbNmOFmz92z43oHSXLclVtiU5PEbS3SXczBXW/1cA2IrTCkvYmPOTINkzx8jCUJk6PhnZU09wj+cq/vYA2G32WSVRk64LgeEhm2IqGee6Up9sp+NwIelaEl53sqsnxQO8opEaEiQ5pfgZzt33xB62nSAU5iA9AVGQSsvv6w5jIFURs17uXTrMunhhUXYEZyz7LfUGMl97RsOUoLrfB3vzNIZkQHkbZFKArqa2W82e3sb2rNZ6TM+shZm9ZqpKuZ9977l0e0FqDTZI5rMZFMtG7uezTgyzFNjB6C5Btk9o5BMyP3RQXYiQfxrhwDiXEOrwaOFNrEEmknAIj5QJ/NohJkiOaBwEBmpUAa5MclYxiuFak4XlPmLCK0ZfxnbMPqN2HBALpIX7JIMD5bbTPpEt0= kyrahelmbold@Kyras-MacBook-Air.local


++ This decoded is:
000000077373682d727361000000030100010000018100ca8f862abc584cfd5890369bb50ffb8a35e5e5f19ec16e1d888bc87dfb63b6d9ebb61ea7ac60a63eaafefcf3d791d27e4b94c5f0e742b1dbfbf78d4a620bf19a6a8d77ee27a2262c377b10d66653bcb246cd98e166cfddb3e37a074972dc955b625393c46d2dd25dccc15d6ff5700d88ad30a4bd898f39320d933c7c8c250993a3e19d9534f708fe72afef600d86df659255193ae0b81e1219b622a19e7ba529f6ca7e37021e95a125e77b2ab27c503bca2911a122439a5f819ceddf7c41eb69d2014e6203d0151904acbefeb0e63205511b35eee5d3accba7861517604672cfb2df506325f7b46c394a0badf077bf334866440791b645280aea6b65bcd9edec6f6acd67a4ccfac8599bd66aa4ab99f7defb9747b416a0d3648e6b31914cb46eee7b34e0cb314d8c1e82e41b64f68e413323f74505d88907f1ae1c0389710eaf068e14dac41269270088f9409fcda2126488e681c04066a5401ae4c7256318ae15a9385e53e62c22b465fc676cc3ea3761c100ba485fb248303e5b6d33e912dd

(4 bytes)   00 00 00 07            = 7 (7 bytes follow)
(7 bytes)   73 73 68 2d 72 73 61   = "ssh-rsa" (US-ASCII)
(4 bytes)   00 00 00 03            = 3 (3 bytes follow)
(3 bytes)   01 00 01               = 65537 (RSA exponent)
(4 bytes)   00 00 01 81            = 385 (385 bytes follow)
(257 bytes) 00 ca 8f .. e9 12 dd   = The key modulus (n)
help from https://www.thedigitalcatonline.com/blog/2018/04/25/rsa-keys/

All RSA public keys start with AAAAB3NzaC1y -- we gotta tell the computers that we're using the next 7 bytes, and then we gotta tell it it we're using ssh, rsa, and ascii. 

--- Sanity Check -----

e = 65537
d = int("543bacea569a4da1c8d367b206705804d876fad128587da71062388493269b22320ff0dd7f244ddd9f941bb277016fcc0f3815bc211f2e0131dd76c6e8d0d8ae8302c34da8f397f6293826ff515c1f0aefc08d83a61268ba66ad171ca7042da3ebd69f8b3e6fa09c5b0a4a05c5c5cc0afb22504f7545b6de26a104b5323e30a651aeffadcd71b12ec6987cedaf925791d0714ce59c0f5489e86142337d49239cb8c0ea0d8bf715f80660256ad300390933ff321294c2120f07422ff510a204f7a5c73c2193a572f88fde91c16323837b6283a30975b8bab95a37a6c1feefa4a8ec992bdeb5e774ee3351d5b1bb354969d4756a3b2dcc9e3c776f236990f508c45ea6a25cf01e4d1ec37e9b7694cb866c7132d870c8ed662ee0bfba9837bf9e1f4144c2b0cf38f32d985881110196a01c96dca802a49c8d4333beda9cfcb0f35151e4153c4e17d3bff3510940b1eed7c2be69be1cfd7da7ad2a2ba651389e12188ba7b8cdd2b048c691147a3e22676c97d608509e9e9ab0299cb8cc6f29ce9fed", 16)

p = int("00ede27f06fb59c72ac4c10e7774e423ea307ad87c616d8354b139196c2d19334b62625458c265f153a2121a1d438f4afcb3e6678a1f184b18b8432fda5aee1f42835a19065dce83d8879a33885afc177756a1e96df1e3eb679e82d8c58d08f01f011c38880c28f01495a59adfc08c3a18a0cc5310bdb32ecb30a670323150645a257e54be174d22793c99035766b3ea70925272335ab36af586fbebe156b7e6eac57e60d0b53de14393d2f9ab3b2affe2837c528370be482fe5df3d937166bb63", 16)
q = int("0x00d9fc64a833d27536c99971a61a3147937c6414fea1dfbcc3466fb130f99df4645afd3d0b609bdefaa459aa7f8fbb54d1b474268ae14d5a35e540568b46949c4130c4dc9688a21d804467e73d06b7f63ad630f3d373bdfe6f0b0da2a2b3c1415bf27b1e9969603f1ef57146b38b2b4f928c86867fd1752b7f6dc1a3b8da464ba49710c11d0c2b5b37080a41c66ff40633f1b6bc62809dda2c180ffc2fc5a38d01572c1fe5827eaa69f45e436c122224fb5a21091d88c29825f0b76c4e1facecbf", 16)

print((e *d)%((p-1) * (q-1)))
--> prints 1


SHA256:AWbKVaAu1OllvdbN2vOg2JfgFkP2rwOoNzYOtkmkz6w kyrahelmbold@Kyras-MacBook-Air.local
+---[RSA 3072]----+
|      *o.        |
|   o B o         |
|  . * o o        |
| . o o   +oo     |
|  . o . S+..o    |
|   . o .. =o.    |
|    . +. ..=+o   |
|     *.+=oo.++.  |
|    E.*+o+o..o.  |
+----[SHA256]-----+



--
